{"version":3,"file":"static/js/114.ee067315.chunk.js","mappings":"sNACA,EAA6B,gCAA7B,EAAsE,4BAAtE,EAAuG,wBCD1FA,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OAAQ,EAEhDC,EAAe,SAAAH,GAAK,OAAIA,EAAMI,MAAO,EAErCC,EAAiB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAM,EAE/CC,EAAc,SAAAP,GAAK,OAAIA,EAAMC,SAASO,KAAM,E,SC+BzD,EA/BoB,WAClB,IAAMP,GAAWQ,EAAAA,EAAAA,IAAYJ,GACvBD,GAASK,EAAAA,EAAAA,IAAYN,GACrBO,GAAWC,EAAAA,EAAAA,MAEXC,EAAkBX,EAASG,QAAO,SAAAS,GAAO,OAC5CA,EAAQC,MAAQ,IAAIC,cAAcC,UAAUZ,GAAU,IAAIW,cAAc,IAO3E,OAJAE,EAAAA,EAAAA,YAAU,WACRP,GAASQ,EAAAA,EAAAA,MACX,GAAG,CAACR,KAGFS,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAWC,SACvBV,EAAgBW,KAAI,SAAAC,GAAA,IAAGV,EAAIU,EAAJV,KAAMW,EAAMD,EAANC,OAAQC,EAAEF,EAAFE,GAAE,OACtCC,EAAAA,EAAAA,MAAA,MAAIP,UAAWC,EAAiBK,GAAIA,EAAGJ,SAAA,CACpCR,EAAK,KAAGW,GACTN,EAAAA,EAAAA,KAAA,UACEC,UAAWC,EACXO,KAAK,SACLC,QAAS,kBAAMnB,GAASoB,EAAAA,EAAAA,IAAcJ,GAAI,EAACJ,SAC5C,aANyBI,EASvB,KAIb,E,SClCA,EAA4B,0BAA5B,EAA6D,qBAA7D,EAAyF,qBCGlF,SAASK,IACd,IAAM3B,GAASK,EAAAA,EAAAA,IAAYN,GACrBO,GAAWC,EAAAA,EAAAA,MAMjB,OADAqB,QAAQC,IAAI,wBAAyB7B,IAEnCe,EAAAA,EAAAA,KAAA,OAAAG,UACEK,EAAAA,EAAAA,MAAA,SAAOP,UAAWC,EAAcC,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAASC,SAAC,2BAC1BH,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLR,UAAWC,EACXa,MAAO9B,EACP+B,SAZmB,SAAAC,GACzB1B,GAAS2B,EAAAA,EAAAA,GAAaD,EAAME,OAAOJ,OACrC,QAeF,CAEA,I,oBC1BA,EAA4B,+BAA5B,EAAuH,gCAAvH,EAA8J,0BAA9J,EAAkR,yBC+ElR,MAzEA,WACE,IAAMxB,GAAWC,EAAAA,EAAAA,MACXV,GAAWQ,EAAAA,EAAAA,IAAYJ,GAC7BkC,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAA0CL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAyBhCG,EAAe,SAAAC,GACnB,IAAAC,EAAwBD,EAAEZ,OAAlBJ,EAAKiB,EAALjB,MAER,OAFmBiB,EAAJrC,MAGb,IAAK,OACH8B,EAAeV,GACf,MACF,IAAK,SACHc,EAAiBd,GACjB,MACF,QACE,OAEN,EAEA,OACEP,EAAAA,EAAAA,MAAA,QAAMP,UAAWC,EAAU+B,SAvCR,SAAAF,GACnBA,EAAEG,iBACepD,EAASqD,MACxB,SAAA9B,GAAA,IAAGV,EAAIU,EAAJV,KAAI,OAAOA,GAAQA,EAAKC,gBAAkB4B,EAAY5B,aAAa,IAItEwC,MAAM,GAADC,OAAIb,EAAW,8BAItBjC,GACEQ,EAAAA,EAAAA,IAAW,CACTJ,KAAM6B,EACNlB,OAAQsB,EACRrB,IAAI+B,EAAAA,EAAAA,aAIRb,EAAe,IACfI,EAAiB,IACnB,EAkBoD1B,SAAA,EAChDK,EAAAA,EAAAA,MAAA,SAAOP,UAAWC,EAAcC,SAAA,CAAC,QAE/BH,EAAAA,EAAAA,KAAA,SACEC,UAAWC,EACXO,KAAK,OACLd,KAAK,OACLoB,MAAOS,EACPR,SAAUc,QAGdtB,EAAAA,EAAAA,MAAA,SAAOP,UAAWC,EAAcC,SAAA,CAAC,UAE/BH,EAAAA,EAAAA,KAAA,SACEC,UAAWC,EACXO,KAAK,OACLd,KAAK,SACLoB,MAAOa,EACPZ,SAAUc,QAGd9B,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAASO,KAAK,SAAQN,SAAC,kBAKhD,EClDA,EApBiB,WACf,IAAMZ,GAAWC,EAAAA,EAAAA,MACX+C,GAAYjD,EAAAA,EAAAA,IAAYV,GACxBS,GAAQC,EAAAA,EAAAA,IAAYF,GAM1B,OAJAU,EAAAA,EAAAA,YAAU,WACRP,GAASiD,EAAAA,EAAAA,MACX,GAAG,CAACjD,KAGFiB,EAAAA,EAAAA,MAAA,OAAAL,SAAA,EACEH,EAAAA,EAAAA,KAACyC,EAAW,KAEZzC,EAAAA,EAAAA,KAACY,EAAM,IACN2B,IAAclD,IAASW,EAAAA,EAAAA,KAAC0C,EAAW,KACpC1C,EAAAA,EAAAA,KAAC0C,EAAW,MAGlB,C","sources":["webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","redux/Contacts/selectors.js","components/ContactList/ContactList.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","pages/ContactsPage/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btnContact\":\"ContactList_btnContact__XKgt7\",\"ulList\":\"ContactList_ulList__1XsEM\",\"Li\":\"ContactList_Li__ruAVF\"};","export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectError = state => state.contacts.error;\n\n// export const selectContactsFilter = state => state.filters.filter;\n","import React from 'react';\nimport { useEffect } from 'react';\nimport css from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact, addContact } from 'redux/Contacts/operations';\nimport { selectContacts, selectFilter } from 'redux/Contacts/selectors';\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const getViewContacts = contacts.filter(contact =>\n    (contact.name || '').toLowerCase().includes((filter || '').toLowerCase())\n  );\n\n  useEffect(() => {\n    dispatch(addContact());\n  }, [dispatch]);\n\n  return (\n    <ul className={css.ulList}>\n      {getViewContacts.map(({ name, number, id }) => (\n        <li className={css.Li} key={id} id={id}>\n          {name}: {number}\n          <button\n            className={css.btnContact}\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"NameStyle\":\"Filter_NameStyle__mJ3iG\",\"name\":\"Filter_name__ZiNRr\",\"inpt\":\"Filter_inpt__ezqRy\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/Contacts/FilterSlice';\nimport css from './Filter.module.css';\nimport { selectFilter } from 'redux/Contacts/selectors';\nexport function Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    dispatch(changeFilter(event.target.value));\n  };\n  console.log('Current filter value:', filter);\n  return (\n    <div>\n      <label className={css.NameStyle}>\n        <div className={css.name}>Find contacts by name</div>\n        <input\n          type=\"text\"\n          className={css.inpt}\n          value={filter}\n          onChange={handleFilterChange}\n        />\n      </label>\n    </div>\n  );\n}\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"NameStyle\":\"ContactForm_NameStyle__ILIJk\",\"numberSlyle\":\"ContactForm_numberSlyle__dDvTc\",\"inputStyle\":\"ContactForm_inputStyle__oHfU5\",\"form\":\"ContactForm_form__dhl+T\",\"button\":\"ContactForm_button__eSwX9\",\"NumberStyle\":\"ContactForm_NumberStyle__moW0U\",\"btn\":\"ContactForm_btn__wll+u\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/Contacts/operations';\nimport { nanoid } from '@reduxjs/toolkit';\nimport css from './ContactForm.module.css';\nimport { selectContacts } from 'redux/Contacts/selectors';\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [contactName, setContactName] = useState('');\n  const [contactNumber, setContactNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const sameName = contacts.some(\n      ({ name }) => name && name.toLowerCase() === contactName.toLowerCase()\n    );\n\n    if (sameName) {\n      alert(`${contactName} is already in contacts!`);\n      return;\n    }\n\n    dispatch(\n      addContact({\n        name: contactName,\n        number: contactNumber,\n        id: nanoid(),\n      })\n    );\n\n    setContactName('');\n    setContactNumber('');\n  };\n\n  const handleChange = e => {\n    const { value, name } = e.target;\n\n    switch (name) {\n      case 'name':\n        setContactName(value);\n        break;\n      case 'number':\n        setContactNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.NameStyle}>\n        Name\n        <input\n          className={css.inputStyle}\n          type=\"text\"\n          name=\"name\"\n          value={contactName}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={css.NameStyle}>\n        Number\n        <input\n          className={css.inputStyle}\n          type=\"text\"\n          name=\"number\"\n          value={contactNumber}\n          onChange={handleChange}\n        />\n      </label>\n      <button className={css.btn} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContact } from 'redux/Contacts/operations';\nimport ContactList from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport { selectLoading, selectError } from 'redux/Contacts/selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContact());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <ContactForm />\n\n      <Filter />\n      {isLoading && !error && <ContactList />}\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectLoading","state","contacts","loading","selectFilter","filter","selectContacts","items","selectError","error","useSelector","dispatch","useDispatch","getViewContacts","contact","name","toLowerCase","includes","useEffect","addContact","_jsx","className","css","children","map","_ref","number","id","_jsxs","type","onClick","deleteContact","Filter","console","log","value","onChange","event","changeFilter","target","_useState","useState","_useState2","_slicedToArray","contactName","setContactName","_useState3","_useState4","contactNumber","setContactNumber","handleChange","e","_e$target","onSubmit","preventDefault","some","alert","concat","nanoid","isLoading","fetchContact","ContactForm","ContactList"],"sourceRoot":""}